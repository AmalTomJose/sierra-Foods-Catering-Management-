<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">

<style>
  * {
    box-sizing: border-box;
  }

  body {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    background-attachment: fixed;
    font-family: 'Poppins', sans-serif;
  }

  .content-main {
    background: transparent;
  }

  .container-fluid {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 25px;
    padding: 30px;
    backdrop-filter: blur(10px);
    margin-top: 20px;
  }

  h2.content-title {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    font-size: 2.2rem;
    font-weight: 800;
    letter-spacing: -0.5px;
    margin-bottom: 8px;
    display: flex;
    align-items: center;
    gap: 12px;
  }

  h2.content-title i {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    font-size: 2rem;
  }

  .text-muted {
    color: rgba(255, 255, 255, 0.8) !important;
    font-weight: 500;
  }

  /* Card Styling */
  .card {
    border-radius: 20px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    overflow: hidden;
  }

  /* Form Styling */
  .form-select {
    background: rgba(255, 255, 255, 0.95);
    border: 2px solid rgba(102, 126, 234, 0.3);
    border-radius: 12px;
    padding: 10px 20px;
    font-weight: 500;
    color: #4a5568;
    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.2);
    transition: all 0.3s ease;
    font-family: 'Poppins', sans-serif;
  }

  .form-select:hover {
    border-color: rgba(102, 126, 234, 0.5);
    box-shadow: 0 6px 20px rgba(102, 126, 234, 0.3);
    transform: translateY(-2px);
  }

  .form-select:focus {
    border-color: #667eea;
    box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
    outline: none;
  }

  .form-label {
    color: #2d3748;
    font-weight: 600;
    font-size: 0.95rem;
    margin-bottom: 8px;
  }

  /* Button Styling */
  .btn-primary {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border: none;
    border-radius: 12px;
    padding: 12px 28px;
    font-weight: 600;
    font-family: 'Poppins', sans-serif;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
  }

  .btn-primary:hover {
    background: linear-gradient(135deg, #764ba2 0%, #667eea 100%);
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
  }

  /* Table Styling */
  .table {
    font-family: 'Poppins', sans-serif;
  }

  .table thead th {
    background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
    color: #2d3748;
    font-weight: 700;
    text-transform: uppercase;
    font-size: 0.85rem;
    letter-spacing: 0.5px;
    border: none;
    padding: 15px;
  }

  .table tbody tr {
    transition: all 0.3s ease;
    border-bottom: 1px solid rgba(0, 0, 0, 0.05);
  }

  .table tbody tr:hover {
    background: rgba(102, 126, 234, 0.05);
    transform: scale(1.01);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .table tbody td {
    padding: 15px;
    color: #4a5568;
    font-weight: 500;
    vertical-align: middle;
  }

  /* Badge Styling */
  .badge {
    padding: 6px 14px;
    border-radius: 20px;
    font-weight: 600;
    font-size: 0.85rem;
    letter-spacing: 0.3px;
  }

  .badge.bg-success {
    background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%) !important;
  }

  .badge.bg-danger {
    background: linear-gradient(135deg, #f5576c 0%, #f093fb 100%) !important;
  }

  /* Action Buttons */
  .btn-sm {
    padding: 8px 18px;
    font-weight: 600;
    font-size: 0.85rem;
    transition: all 0.3s ease;
    border-width: 2px;
  }

  .btn-outline-success {
    border-color: #38ef7d;
    color: #11998e;
  }

  .btn-outline-success:hover {
    background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
    border-color: transparent;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(17, 153, 142, 0.3);
  }

  .btn-outline-danger {
    border-color: #f5576c;
    color: #f5576c;
  }

  .btn-outline-danger:hover {
    background: linear-gradient(135deg, #f5576c 0%, #f093fb 100%);
    border-color: transparent;
    color: #fff;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(245, 87, 108, 0.3);
  }

  /* DataTable Customization */
  .dataTables_wrapper {
    font-family: 'Poppins', sans-serif;
  }

  .dataTables_filter input {
    border: 2px solid rgba(102, 126, 234, 0.3);
    border-radius: 10px;
    padding: 8px 15px;
    transition: all 0.3s ease;
  }

  .dataTables_filter input:focus {
    border-color: #667eea;
    box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
    outline: none;
  }

  .dataTables_length select {
    border: 2px solid rgba(102, 126, 234, 0.3);
    border-radius: 10px;
    padding: 6px 12px;
  }

  .dataTables_paginate .paginate_button {
    border-radius: 8px;
    margin: 0 2px;
    transition: all 0.3s ease;
  }

  .dataTables_paginate .paginate_button:hover {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-color: transparent;
    color: #fff !important;
  }

  .dataTables_paginate .paginate_button.current {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-color: transparent;
    color: #fff !important;
  }

  /* Empty State */
  .text-muted i {
    color: rgba(102, 126, 234, 0.5);
  }
</style>

<section class="content-main py-4">
  <div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
      <div>
        <h2 class="content-title card-title fw-bold mb-1">
          <i class="bi bi-people-fill"></i>Users List
        </h2>
        <p class="text-muted mb-0">Manage your registered users efficiently.</p>
      </div>
      
    </div>

    <!-- FILTERS -->
    <div class="card shadow-sm border-0 mb-4">
      <div class="card-body">
      
      </div>
    </div>

    <!-- USERS TABLE -->
    <form action="/admin/userDashboard" method="get" class="row gy-3 align-items-end">
          

      <div class="col-md-4">
        <label for="status" class="form-label fw-semibold">User Status</label>
        <select name="status" id="status" class="form-select">
          <option value="" selected>All</option>
          <option value="listed">Blocked</option>
          <option value="unlisted">Active</option>
        </select>
      </div>

      <div class="col-md-4 text-md-end">
        <input
          type="submit"
          class="btn btn-primary px-4 rounded-pill mt-3"
          value="Apply Filter"
        />
      </div>
    </form>
    <div class="card shadow-sm border-0">
      <div class="card-body">
        <table id="userTable" class="table table-striped table-hover align-middle">
          <thead class="table-light">
            <tr>
              <th>Name</th>
              <th>Email</th>
              <th>Phone Number</th>
              <th>Status</th>
              <th class="text-center">Action</th>
            </tr>
          </thead>
          <tbody>
            <% if (users.length > 0) { %>
              <% users.forEach(user => { %>
                <tr>
                  <td><%= user.firstname %></td>
                  <td><%= user.email %></td>
                  <td><%= user.phoneno %></td>
                  <td>
                    <% if (user.isBlocked == 1) { %>
                      <span class="badge bg-danger">Blocked</span>
                    <% } else { %>
                      <span class="badge bg-success">Active</span>
                    <% } %>
                  </td>
                  <td class="text-center">
                    <% if (user.isBlocked == 1) { %>
                      <button class="btn btn-sm btn-outline-success rounded-pill"
                              onclick="toggleUserStatus('<%= user._id %>', 'unblock')">
                        <i class="bi bi-unlock-fill me-1"></i>Unblock
                      </button>
                    <% } else { %>
                      <button class="btn btn-sm btn-outline-danger rounded-pill"
                              onclick="toggleUserStatus('<%= user._id %>', 'block')">
                        <i class="bi bi-lock-fill me-1"></i>Block
                      </button>
                    <% } %>
                  </td>
                </tr>
              <% }) %>
            <% } else { %>
              <tr>
                <td colspan="5" class="text-center text-muted py-4">
                  <i class="bi bi-person-x fs-4 d-block mb-2"></i>No users found.
                </td>
              </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</section>

<!-- SCRIPTS -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<script>
  // üîç Client-side search
  document.addEventListener("DOMContentLoaded", function () {
    const searchInput = document.getElementById("searchInput");
    const table = document.getElementById("userTable");
    const rows = table.getElementsByTagName("tr");

    searchInput.addEventListener("keyup", function () {
      const searchText = searchInput.value.toLowerCase();
      for (let i = 1; i < rows.length; i++) {
        const rowData = rows[i].textContent.toLowerCase();
        rows[i].style.display = rowData.includes(searchText) ? "" : "none";
      }
    });
  });

  // üß† SweetAlert block/unblock
  function toggleUserStatus(userId, action) {
    const isBlock = action === "block";
    const confirmText = isBlock ? "Yes, block user!" : "Yes, unblock user!";
    const title = isBlock ? "Block User?" : "Unblock User?";
    const text = isBlock
      ? "This user will be blocked from accessing their account."
      : "This user will regain access to their account.";

    Swal.fire({
      title: title,
      text: text,
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: isBlock ? "#d33" : "#198754",
      cancelButtonColor: "#6c757d",
      confirmButtonText: confirmText,
    }).then((result) => {
      if (result.isConfirmed) {
        fetch(`/admin/unlistUser?id=${userId}`, { method: "GET" })
          .then((response) => {
            if (response.ok) {
              Swal.fire({
                icon: "success",
                title: isBlock ? "User Blocked!" : "User Unblocked!",
                timer: 1500,
                showConfirmButton: false,
              }).then(() => location.reload());
            } else {
              Swal.fire("Error", "Failed to update user status.", "error");
            }
          })
          .catch(() => {
            Swal.fire("Error", "Something went wrong!", "error");
          });
      }
    });
  }

  // üìä DataTable initialization
  $(document).ready(function () {
    new DataTable("#userTable", {
      order: [[0, "asc"]],
      pageLength: 7,
      lengthMenu: [7, 20, 30, 50],
      language: {
        search: "",
        searchPlaceholder: "Search table...",
      },
    });
  });
</script>
