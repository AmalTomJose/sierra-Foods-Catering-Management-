<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
<style>
  * { box-sizing: border-box; }
  body {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    background-attachment: fixed;
    font-family: 'Poppins', sans-serif;
  }
  .main {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 25px;
    padding: 30px;
    backdrop-filter: blur(10px);
    margin-top: 20px;
  }
  .container {
    background: transparent;
  }
  h2.mb-4 {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    font-size: 2.2rem;
    font-weight: 800;
    letter-spacing: -0.5px;
  }
  .card {
    border-radius: 20px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.3);
  }
  .form-control, .form-select {
    background: rgba(255, 255, 255, 0.95);
    border: 2px solid rgba(102, 126, 234, 0.3);
    border-radius: 12px;
    padding: 12px 20px;
    font-weight: 500;
    color: #4a5568;
    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.2);
    transition: all 0.3s ease;
    font-family: 'Poppins', sans-serif;
  }
  .form-control:hover, .form-select:hover {
    border-color: rgba(102, 126, 234, 0.5);
    box-shadow: 0 6px 20px rgba(102, 126, 234, 0.3);
    transform: translateY(-2px);
  }
  .form-control:focus, .form-select:focus {
    border-color: #667eea;
    box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
    outline: none;
  }
  .form-label {
    color: #2d3748;
    font-weight: 600;
    font-size: 0.95rem;
    margin-bottom: 8px;
  }
  .btn-primary, button[type="submit"] {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border: none;
    border-radius: 12px;
    padding: 12px 28px;
    font-weight: 600;
    font-family: 'Poppins', sans-serif;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
    color: #fff;
  }
  .btn-primary:hover, button[type="submit"]:hover {
    background: linear-gradient(135deg, #764ba2 0%, #667eea 100%);
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
    color: #fff;
  }
  .alert {
    border-radius: 12px;
    border: none;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  }
</style>

<main class="main" style="margin-top: 80px;">
  <div class="container">

    <h2 class="mb-4">Add New Product</h2>

    <% if (typeof error !== 'undefined' && error) { %>
      <div class="alert alert-danger text-center"><%= error %></div>
    <% } %>

    <% if (locals.success) { %>
      <div class="alert alert-success text-center"><%= success %></div>
    <% } %>

    <form action="/admin/addproduct" method="POST" enctype="multipart/form-data" onsubmit="return validateForm()">
      <div class="card shadow-sm p-4">

        <div class="mb-3">
          <label class="form-label fw-bold">Product Name</label>
          <input type="text" name="name" class="form-control"
            placeholder="Enter product name"
            value="<%= oldData ? oldData.name : '' %>" required>
          <small class="text-danger" id="nameError"></small>
        </div>

        <div class="row mb-3">
          <div class="col-md-6">
            <label class="form-label fw-bold">Price</label>
            <input type="number" name="price" class="form-control"
              placeholder="Enter price"
              value="<%= oldData ? oldData.price : '' %>" required>
            <small class="text-danger" id="priceError"></small>
          </div>
          <div class="col-md-6">
            <label class="form-label fw-bold">Discount Price</label>
            <input type="number" name="discountprice" class="form-control"
              placeholder="Enter discount price"
              value="<%= oldData ? oldData.discountprice : '' %>" required>
            <small class="text-danger" id="discountError"></small>
          </div>
        </div>

        <div class="row mb-3">
          <div class="col-md-6">
            <label class="form-label fw-bold">Category</label>
            <select id="categorySelect" name="categoryid" class="form-control" required>
              <option value="">Select category</option>
            </select>
          </div>
          <div class="col-md-6">
            <label class="form-label fw-bold">Subcategory</label>
            <select id="subcategorySelect" name="subcategoryid" class="form-control" required>
              <option value="">Select subcategory</option>
            </select>
          </div>
        </div>

        <div class="mb-3">
          <label class="form-label fw-bold">Description</label>
          <textarea name="description" class="form-control" rows="4"
            placeholder="Enter product description"><%= oldData ? oldData.description : '' %></textarea>
          <small class="text-danger" id="descError"></small>
        </div>

        <div class="mb-3">
          <label class="form-label fw-bold">Upload Product Images (Min 3)</label>
          <input type="file" name="image" id="imageInput" class="form-control" multiple accept="image/*" required>
          <small class="text-danger" id="imageError"></small>
        </div>

        <div class="text-end">
          <a href="/admin/products" class="btn btn-light">Cancel</a>
          <button type="submit" class="btn btn-primary">Add Product</button>
        </div>

      </div>
    </form>
  </div>
</main>

<script>
document.addEventListener("DOMContentLoaded", function () {
  const categorySelect = document.getElementById("categorySelect");
  const subcategorySelect = document.getElementById("subcategorySelect");

  // Load categories
  fetch("/admin/loadcategory")
    .then(res => res.json())
    .then(data => {
      data.forEach(category => {
        let option = new Option(category.cat_name, category._id);
        categorySelect.add(option);
      });
    });

  // Load subcategories on change
  categorySelect.addEventListener("change", function () {
    const categoryId = this.value;
    subcategorySelect.innerHTML = '<option value="">Select subcategory</option>';
    if (!categoryId) return;
    fetch(`/admin/subCategory/${categoryId}`)
      .then(res => res.json())
      .then(data => {
        data.forEach(subcat => {
          let option = new Option(subcat.subcat_name, subcat._id);
          subcategorySelect.add(option);
        });
      });
  });
});

// Client-side form validation
function validateForm() {
  let valid = true;
  const name = document.querySelector("input[name='name']").value.trim();
  const price = document.querySelector("input[name='price']").value.trim();
  const discount = document.querySelector("input[name='discountprice']").value.trim();
  const imageInput = document.getElementById("imageInput");

  const validName = /^[A-Za-z\s]+$/;
  document.getElementById("nameError").textContent = "";
  document.getElementById("priceError").textContent = "";
  document.getElementById("discountError").textContent = "";
  document.getElementById("imageError").textContent = "";

  if (!name.match(validName)) {
    document.getElementById("nameError").textContent = "Only letters and spaces allowed.";
    valid = false;
  }

  if (price <= 0) {
    document.getElementById("priceError").textContent = "Price must be greater than zero.";
    valid = false;
  }

  if (discount < 0) {
    document.getElementById("discountError").textContent = "Discount cannot be negative.";
    valid = false;
  }

  if (imageInput.files.length < 3) {
    document.getElementById("imageError").textContent = "Please upload at least 3 images.";
    valid = false;
  }

  return valid;
}
</script>
