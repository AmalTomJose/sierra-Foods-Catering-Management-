
<head>
  <meta charset="UTF-8">
  <title>My Wishlist | Sierra Foods</title>

  <!-- Bootstrap 5 -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  
  <!-- FontAwesome -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">
  
  <!-- SweetAlert2 -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <style>
    body {
      background-color: #f9fafc;
      font-family: 'Inter', sans-serif;
    }

    .wishlist-container {
      margin-top: 100px;
      margin-bottom: 200px;
    }

    .wishlist-title {
      text-align: center;
      font-weight: 700;
      font-size: 2rem;
      color: #333;
      margin-bottom: 30px;
    }

    .wishlist-card {
      background: #fff;
      border-radius: 16px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.08);
      overflow: hidden;
      transition: transform 0.3s ease;
    }

    .wishlist-card:hover {
      transform: translateY(-6px);
    }

    .wishlist-image {
      position: relative;
      overflow: hidden;
      height: 220px;
      border-bottom: 1px solid #f1f1f1;
    }

    .wishlist-image img {
      object-fit: cover;
      width: 100%;
      height: 100%;
      transition: transform 0.4s ease;
    }

    .wishlist-image img:hover {
      transform: scale(1.05);
    }

    .wishlist-details {
      padding: 20px;
      text-align: center;
    }

    .wishlist-details h5 {
      font-size: 1.1rem;
      font-weight: 600;
      color: #333;
    }

    .wishlist-details p {
      font-size: 0.95rem;
      color: #777;
    }

    .wishlist-btns {
      display: flex;
      justify-content: space-around;
      padding: 15px;
      border-top: 1px solid #f0f0f0;
      background-color: #fafafa;
    }

    .wishlist-btns button,
    .wishlist-btns a {
      font-size: 0.9rem;
      border-radius: 10px;
      padding: 8px 14px;
      transition: 0.3s ease;
    }

    .wishlist-btns .btn-primary {
      background-color: #2a9d8f;
      border: none;
    }

    .wishlist-btns .btn-primary:hover {
      background-color: #23867b;
    }

    .wishlist-btns .btn-danger {
      background-color: #e63946;
      border: none;
    }

    .wishlist-btns .btn-danger:hover {
      background-color: #c9202d;
    }

    .empty-wishlist {
      text-align: center;
      padding: 100px 0;
    }

    .empty-wishlist h3 {
      color: #999;
      margin-bottom: 20px;
    }

    .empty-wishlist a {
      padding: 10px 25px;
      border-radius: 8px;
      background-color: #007bff;
      color: white;
      text-decoration: none;
    }

    .empty-wishlist a:hover {
      background-color: #0056b3;
    }
  </style>
</head>

<body>

  <section class="wishlist-container container">
    <h2 class="wishlist-title"><i class="fa-solid fa-heart text-danger"></i> My Wishlist</h2>

    <% if (Wishlist.items && Wishlist.items.length > 0) { %>
      <div class="row g-4">
        <% Wishlist.items.forEach((item, i) => { 
          const product = item.product;
          const img = product.item_image && product.item_image.length > 0 ? product.item_image[0] : null;
        %>

          <div class="col-xl-3 col-lg-4 col-md-6 col-sm-12">
            <div class="wishlist-card">
              <div class="wishlist-image">
                <% if (img) { %>
                  <a href="/product/<%= product._id %>">
                    <img src="/admin-assets/imgs/productIMG/<%= img %>" alt="<%= product.item_name %>">
                  </a>
                <% } else { %>
                  <img src="/path/to/default-image.jpg" alt="No image">
                <% } %>
              </div>

              <div class="wishlist-details">
                <h5><%= product.item_name %></h5>
                <p class="text-muted">â‚¹<%= product.item_price %></p>
              </div>

              <div class="wishlist-btns">
                <% if (qty && qty > 1) { %>
                  <form class="addToCartForm d-inline-block mb-0">
                    <input type="hidden" name="productId" class="productData_id" value="<%= product._id %>">
                    <input type="hidden" name="qty" class="qty" value="<%= qty %>">
                    <button type="submit" class="btn btn-primary">
                      <i class="fa fa-shopping-cart me-1"></i> Add to Cart
                    </button>
                  </form>
                <% } else { %>
                  <a href="/eventDetails" class="btn btn-primary">
                    <i class="fa fa-calendar-check me-1"></i> Book Event
                  </a>
                <% } %>

                <button class="btn btn-danger" onclick="confirmRemoveWishlistItem('<%= product._id %>')">
                  <i class="fa fa-trash"></i>
                </button>
              </div>
            </div>
          </div>

        <% }) %>
      </div>

    <% } else { %>
      <div class="empty-wishlist">
        <h3><i class="fa-regular fa-heart"></i> Your Wishlist is Empty</h3>
        <a href="/shop"><i class="fa-solid fa-cart-shopping me-2"></i> Continue Shopping</a>
      </div>
    <% } %>
  </section>

  <!-- SweetAlert Script -->
  <script>
    function confirmRemoveWishlistItem(productId) {
      Swal.fire({
        title: "Are you sure?",
        text: "You want to remove this item from your wishlist?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, remove it!",
      }).then((result) => {
        if (result.isConfirmed) {
          removeWishlistItem(productId);
        }
      });
    }

    function removeWishlistItem(productId) {
      fetch(`/removeWishlist?productId=${productId}`, {
        method: 'DELETE',
      })
      .then(res => res.json())
      .then(data => {
        if (data.success) {
          Swal.fire("Removed!", "Item removed from wishlist.", "success").then(() => {
            location.reload();
          });
        } else {
          Swal.fire("Error!", data.error || "Something went wrong.", "error");
        }
      })
      .catch(err => {
        console.error(err);
        Swal.fire("Error!", "Failed to remove item.", "error");
      });
    }

    // AJAX Add to Cart
    document.querySelectorAll('.addToCartForm').forEach(form => {
      form.addEventListener('submit', function (e) {
        e.preventDefault();
        const productId = this.querySelector('.productData_id').value;
        const qty = this.querySelector('.qty').value;

        fetch('/cart', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ productId, qty })
        })
        .then(res => res.json())
        .then(data => {
          Swal.fire({
            title: data.success ? "Added!" : "Error!",
            text: data.success ? data.message : data.error || "Failed to add to cart.",
            icon: data.success ? "success" : "error"
          }).then(() => {
            if (data.success) location.reload();
          });
        })
        .catch(err => {
          console.error('Cart Error:', err);
          Swal.fire("Error!", "Something went wrong while adding to cart.", "error");
        });
      });
    });
  </script>

</body>

