<main class="main" style="margin-bottom: 200px; padding-top: 100px;">
  <section class="mt-50 mb-50">
    <div class="container">
      <div class="row"><div class="col-12"><div class="divider mt-50 mb-50"></div></div></div>
      <div class="row">
        <!-- Left Side: Address -->
        <div class="col-md-6">
          <div class="row">
            <% if (addressData) { %>
              <div class="col-12">
                <div class="card mb-3 mb-lg-0">
                  <div class="card-header">
                    <h5 class="mb-0 d-flex justify-content-between">
                      <span><%= userData.firstname %></span>
                      <span><%= userData.phoneno %></span>
                    </h5>
                  </div>
                  <div class="card-body d-flex justify-content-between">
                    <address>
                      <strong>Event Date:</strong> <%= addressData.eventDate %><br>
                      <strong>Event Type:</strong> <%= addressData.eventType %><br>
                      <strong>Guests:</strong> <%= addressData.guestCount %><br>
                      <strong>Place:</strong> <%= addressData.eventPlace %><br>
                      <strong>Time:</strong> <%= addressData.eventTime %><br>
                      <strong>District:</strong> <%= addressData.eventDistrict %><br>
                      <strong>Pincode:</strong> <%= addressData.eventPincode %>
                    </address>
                    <div class="d-flex align-items-center">
                      <input type="radio" name="checkAddress" value="<%= addressData._id %>" id="addressradio" class="me-3">
                      <a href="/updateBooking?id=<%= addressData._id %>" class="btn-small">Edit</a>
                    </div>
                  </div>
                </div>
              </div>
            <% } else { %>
              <div class="col-12">
                <div class="alert alert-info">No address found. Please add one.</div>
              </div>
            <% } %>
          </div>
        </div>

        <!-- Right Side: Order Summary -->
        <div class="col-md-6">
          <div class="order_review">
            <h4 class="mb-20">Your Orders</h4>

            <div class="table-responsive order_table text-center">
              <table class="table">
                <thead><tr><th colspan="2">Product</th><th>Total</th></tr></thead>
                <tbody>
                  <% if (cart && cart.length > 0) { %>
                    <% cart.forEach((cartData, index) => { 
                      const originalPrice = cartData.product.item_price * cartData.quantity;
                      const finalPrice = productTotal[index];
                      const discount = originalPrice - finalPrice;
                    %>
                      <tr>
                        <td class="image product-thumbnail">
                          <img src="/admin-assets/imgs/productIMG/<%= cartData.product.item_image[0] %>" alt="#">
                        </td>
                        <td>
                          <h5><%= cartData.product.name %></h5>
                          <span class="product-qty">x <%= cartData.quantity %></span><br>
                          <small class="text-muted">Original: ₹<%= cartData.product.item_price %></small><br>
                          <% if (discount > 0) { %>
                            <small class="text-success">Offer: -₹<%= discount / cartData.quantity %></small><br>
                            <strong class="text-danger">Now: ₹<%= finalPrice / cartData.quantity %></strong>
                          <% } else { %>
                            <strong>Price: ₹<%= cartData.product.item_price %></strong>
                          <% } %>
                        </td>
                        <td>₹<%= finalPrice %></td>
                      </tr>
                    <% }) %>
                
                    <tr>
                      <th>Product Total</th>
                      <td colspan="2">₹<%= subtotalWithShipping + offerDiscount %></td>
                    </tr>
                    <tr>
                      <th>Offer Discount</th>
                      <td colspan="2" class="text-success">- ₹<%= offerDiscount %></td>
                    </tr>
                    <tr><th>SubTotal</th><td colspan="2" id="subtotalAmount">₹<%= subtotalWithShipping %></td></tr>
                    <tr><th>Shipping</th><td colspan="2"><em>Free Shipping</em></td></tr>
                
                    <tr id="discountRow" style="display: none;">
                      <th>Coupon Discount</th>
                      <td colspan="2" id="discountAmount" class="text-danger">- ₹0</td>
                    </tr>
                
                    <tr id="advanceRow" style="display: none;">
                      <th>COD Advance (25%)</th>
                      <td colspan="2" id="advanceAmount" class="text-warning">₹0</td>
                    </tr>
                
                    <tr class="summary-total">
                      <td><strong>Final Total</strong></td>
                      <td colspan="2"><strong id="finalAmount">₹<%= subtotalWithShipping %></strong></td>
                    </tr>
                  <% } %>
                </tbody>
                
              </table>
            </div>
            <div class="mt-3">
  <label for="couponCode" class="form-label">Apply Coupon</label>
  <div class="input-group">
    <input type="text" id="couponCode" class="form-control" placeholder="Enter coupon code">
    <button id="applyCouponBtn" class="btn btn-outline-primary" type="button">Apply</button>
    <button id="removeCouponBtn" class="btn btn-outline-danger d-none" type="button">Remove</button>
  </div>
  <small id="couponFeedback" class="text-success"></small>
</div>


            <!-- Payment Method -->
            <div class="payment_method mt-30">
              <h5>Payment</h5>
              <div class="payment_option">
                <div class="custome-radio">
                  <input class="form-check-input" value="cashondelivery" type="radio" name="payment_option" id="exampleRadios1">
                  <label class="form-check-label" for="exampleRadios1">Cash On Delivery</label>
                </div>
                <div class="custome-radio">
                  <input class="form-check-input" value="online" type="radio" name="payment_option" id="exampleRadios2">
                  <label class="form-check-label" for="exampleRadios2">Online Payment</label>
                </div>
                <div class="custome-radio">
                  <input class="form-check-input" value="Wallet" type="radio" name="payment_option" id="exampleRadios3">
                  <label class="form-check-label" for="exampleRadios3">Wallet</label>
                </div>
              </div>
              <div id="codAdvanceNote" class="alert alert-warning mt-3 d-none">
                <strong>Note:</strong> 25% advance payment is required for COD. This amount is <strong>non-refundable</strong>.
              </div>
            </div>

            <!-- Place Order Button -->
            <a href="#" id="btn_checkout" class="btn btn-fill-out btn-block mt-30">Place Order</a>
          </div>
        </div>
      </div>
    </div>
  </section>
</main>

<!-- Scripts -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script>
  let appliedCoupon = null;
  let finalAmountValue = parseFloat("<%= subtotalWithShipping %>");
  let codAdvance = 0;
  const applyBtn = document.getElementById('applyCouponBtn');
const removeBtn = document.getElementById('removeCouponBtn');
const codeInput = document.getElementById('couponCode');

applyBtn.addEventListener('click', () => {
  const code = codeInput.value.trim();

  fetch('/applyCoupon', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ code, finalAmountValue })
  })
  .then(res => res.json())
  .then(data => {
    const feedback = document.getElementById('couponFeedback');
    const discountRow = document.getElementById('discountRow');
    const discountAmount = document.getElementById('discountAmount');
    const finalAmount = document.getElementById('finalAmount');
    console.log('this is test1:'.finalAmount)

    if (data.success) {
      appliedCoupon = data.coupon;
      appliedCoupon.discountValue = data.discount;

      feedback.textContent = `Coupon "${data.coupon.code}" applied. Discount: ₹${data.coupon.discountValue}`;
      feedback.classList.remove('text-danger');
      feedback.classList.add('text-success');

      discountRow.style.display = 'table-row';
      discountAmount.textContent =
        data.coupon.discountType === 'percentage'
          ? `- ₹${data.coupon.discountValue}%`
          : `- ₹${data.coupon.discountValue}`;

      finalAmountValue = finalAmountValue - data.discount;
      finalAmount.textContent = `₹${finalAmountValue}`;
      console.log('this is test2:',finalAmountValue)

      applyBtn.classList.add('d-none');
      removeBtn.classList.remove('d-none');
    } else {
      feedback.textContent = data.message;
      feedback.classList.remove('text-success');
      feedback.classList.add('text-danger');

      discountRow.style.display = 'none';
      discountAmount.textContent = '- ₹0';
      finalAmount.textContent = `₹<%= subtotalWithShipping %>`;
      finalAmountValue = parseFloat("<%= subtotalWithShipping %>");
    }
  });
});

removeBtn.addEventListener('click', () => {
  // Reset UI elements
  const discountRow = document.getElementById('discountRow');
  const discountAmount = document.getElementById('discountAmount');
  const finalAmount = document.getElementById('finalAmount');
  const feedback = document.getElementById('couponFeedback');

  appliedCoupon = null;
  codeInput.value = "";
  finalAmountValue = parseFloat("<%= subtotalWithShipping %>");

  // Hide discount row
  discountRow.style.display = 'none';
  discountAmount.textContent = '- ₹0';

  // Reset final amount
  finalAmount.textContent = `₹${finalAmountValue}`;

  // Reset buttons
  applyBtn.classList.remove('d-none');
  removeBtn.classList.add('d-none');

  // Clear feedback
  feedback.textContent = '';
});


  const btn_checkout = document.getElementById('btn_checkout');


  document.querySelectorAll('input[name="payment_option"]').forEach((radio) => {
    radio.addEventListener('change', () => {
      const selected = document.querySelector('input[name="payment_option"]:checked').value;
      const codNote = document.getElementById('codAdvanceNote');
      const advanceRow = document.getElementById('advanceRow');
      const advanceAmount = document.getElementById('advanceAmount');
      console.log('this is test3:',finalAmountValue)


      if (selected === 'cashondelivery') {
        codNote.classList.remove('d-none');
        codAdvance = Math.round(finalAmountValue * 0.25);
        advanceRow.style.display = 'table-row';
        advanceAmount.textContent = `₹${codAdvance}`;
      } else {
        codNote.classList.add('d-none');
        codAdvance = 0;
        advanceRow.style.display = 'none';
      }
    });
  });

  btn_checkout.addEventListener('click', () => {
    const selectedAddress = document.querySelector('input[name="checkAddress"]:checked');
    const selectedPaymentMethod = document.querySelector('input[name="payment_option"]:checked').value;

    if (!selectedAddress) {
      Swal.fire({ title: 'Error', text: 'Please select an address.', icon: 'error' });
      return;
    }
    const requestData = {
      address: selectedAddress.value,
      paymentMethod: selectedPaymentMethod,
      coupon: appliedCoupon?.code || null,
      couponDiscount: appliedCoupon?.discountValue || 0,
      finalAmount: finalAmountValue,
      codAdvance: codAdvance
    };

    if (selectedPaymentMethod === 'cashondelivery') {
      Swal.fire({
        title: "Pay 25% COD Advance",
        text: `You need to pay ₹${codAdvance} now to confirm your COD order.`,
        showCancelButton: true,
        confirmButtonText: "Pay with Razorpay",
        cancelButtonText: "Use Wallet",
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#2ecc71"
      }).then((result) => {
        if (result.isConfirmed) {
          // Razorpay COD advance
          fetch('/checkout/create-razorpay-order', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ ...requestData, finalAmount: codAdvance })
          })
          .then(res => res.json())
          .then(order => {
            const rzp = new Razorpay({
              key: '<%= razorpayKey %>',
              amount: order.amount,
              currency: "INR",
              name: "Catering COD Advance",
              description: "COD Advance Payment",
              order_id: order.id,
              handler: function (response) {
                console.log("Razorpay response received:", response); // ✅ Debug log

                fetch('/checkout/verify-razorpay', {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({
                    ...response,
                    ...requestData
                  })
                })
                .then(res => res.json())
                .then(result => {
                  if (result.success) {
                    Swal.fire({ icon: "success", title: result.message })
                      .then(() => window.location.href = '/orderSuccess');
                  } else {
                    Swal.fire("Error", result.error, "error");
                  }
                });
              }
            });
            rzp.open();
          });
        } else {
          // Wallet COD advance
          fetch('/checkout/pay-cod-wallet', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(requestData)
          })
          .then(res => res.json())
          .then(data => {
            if (data.success) {
              Swal.fire("Success", data.message, "success").then(() => {
                window.location.href = "/orderSuccess";
              });
            } else {
              Swal.fire("Error", data.error, "error");
            }
          });
        }
      });
    } else if (selectedPaymentMethod === 'online') {
      // Full payment online
      fetch('/checkout/create-razorpay-order', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(requestData)
      })
      .then(res => res.json())
      .then(order => {
        const options = {
          key: '<%= razorpayKey %>',
          amount: order.amount,
          currency: "INR",
          name: "Catering Service",
          description: "Order Payment",
          order_id: order.id,
          handler: function (response) {
            fetch('/checkout/verify-razorpay', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({
                ...response,
                ...requestData
              })
            })
            .then(res => res.json())
            .then(result => {
              if (result.success) {
                Swal.fire({ title: "Success", text: result.message, icon: "success" })
                  .then(() => window.location.href = '/orderSuccess');
              } else {
                Swal.fire("Error!", result.error, "error");
              }
            });
          },
          prefill: {
            name: "<%= userData.firstname %>",
            email: "<%= userData.email %>",
            contact: "<%= userData.phoneno %>"
          },
          theme: { color: "#3399cc" }
        };
        const rzp = new Razorpay(options);
        rzp.open();
      });
    } else {
      // Full Wallet payment
      fetch('/checkout', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(requestData)
      })
      .then(res => res.json())
      .then(data => {
        if (data.success) {
          Swal.fire({ title: "Success", text: data.message, icon: "success" })
            .then(() => window.location.href = '/orderSuccess');
        } else {
          Swal.fire("Error!", data.error, "error");
        }
      });
    }
  });
</script>
