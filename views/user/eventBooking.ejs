<!-- FullCalendar CSS and JS -->
<link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/main.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/main.min.js"></script>

<!-- Google Fonts -->
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet" />
<style>
  body {
    font-family: 'Inter', sans-serif;
    background: #f9fafb;
    margin: 0;
    padding: 40px;
    color: #1a202c;
  }

  .main-wrapper {
    display: flex;
    flex-wrap: wrap;
    gap: 30px;
    justify-content: center;
    align-items: flex-start;
  }

  .form-card, .calendar-card {
    background: #ffffff;
    border-radius: 16px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.05);
    padding: 30px 28px;
    flex: 1 1 380px;
    max-width: 460px;
    transition: transform 0.2s ease-in-out;
  }

  .form-card:hover, .calendar-card:hover {
    transform: translateY(-4px);
  }

  h2 {
    text-align: center;
    font-size: 1.9rem;
    font-weight: 600;
    margin-bottom: 30px;
    color: #2d3748;
  }

  form > div {
    margin-bottom: 20px;
  }

  label {
    display: block;
    margin-bottom: 8px;
    font-weight: 600;
    font-size: 0.95rem;
    color: #4a5568;
  }

  input[type="text"],
  select {
    width: 100%;
    padding: 12px 14px;
    border: 1px solid #e2e8f0;
    border-radius: 10px;
    background-color: #f7fafc;
    font-size: 1rem;
    transition: border-color 0.3s, background-color 0.3s;
  }

  input[type="text"]:focus,
  select:focus {
    outline: none;
    border-color: #3182ce;
    background-color: #fff;
  }

  select:invalid {
    color: #a0aec0;
  }

  button {
    width: 100%;
    background: linear-gradient(to right, #3182ce, #63b3ed);
    color: white;
    padding: 12px;
    font-size: 1rem;
    border: none;
    border-radius: 10px;
    font-weight: 600;
    cursor: pointer;
    transition: background 0.3s;
  }

  button:hover {
    background: linear-gradient(to right, #2563eb, #4299e1);
  }

  #calendar {
    border-radius: 12px;
    overflow: hidden;
  }

  @media (max-width: 768px) {
    .main-wrapper {
      flex-direction: column;
      align-items: center;
    }
  }
</style>


<div class="main-wrapper">
  <!-- Form Section -->
  <div class="form-card">
    <h2>Book Your Event</h2>
    <form action="/bookings" method="POST">
      <div>
        <label for="eventDate">Event Date</label>
        <input type="text" id="eventDate" name="eventDate" readonly required placeholder="Select from calendar" />
      </div>

      <div>
        <label for="eventType">Event Type</label>
        <select name="eventType" id="eventType" required>
          <option value="" disabled selected>Select event type</option>
          <option value="Wedding">Wedding</option>
          <option value="Birthday">Birthday</option>
          <option value="Corporate">Corporate</option>
          <option value="Party">Party</option>
        </select>
      </div>

      <div>
        <label for="guestCount">Number of Guests</label>
        <select name="guestCount" id="guestCount" required>
          <option value="" disabled selected>Select guest range</option>
          <option value="200">Under 200</option>
          <option value="400">Under 400</option>
          <option value="600">Under 600</option>
          <option value="800">Under 800</option>
          <option value="1000">Under 1000</option>
        </select>
      </div>

      <button type="submit">Confirm Booking</button>
    </form>
  </div>

  <!-- Calendar Section -->
  <div class="calendar-card">
    <div id="calendar"></div>
  </div>
</div>

<!-- JS to Load Calendar -->
<script>
  document.addEventListener('DOMContentLoaded', async function () {
    const calendarEl = document.getElementById('calendar');
    const eventDateInput = document.getElementById('eventDate');

    // Fetch existing bookings
    const res = await fetch('/bookings/daily-count');
    const data = await res.json();

    const redDays = data.filter(d => d.count >= 2000).map(d => d.date);
    const yellowDays = data.filter(d => d.count >= 1600 && d.count < 2000).map(d => d.date);

    const calendar = new FullCalendar.Calendar(calendarEl, {
      initialView: 'dayGridMonth',
      height: 'auto',
      events: data.map(d => ({
        title: 'Booked',
        start: d.date,
        allDay: true,
        color: redDays.includes(d.date) ? '#e74c3c' : yellowDays.includes(d.date) ? '#f1c40f' : '#2ecc71',
      })),
      dateClick: function(info) {
        const selected = info.dateStr;
        if (redDays.includes(selected)) {
          alert("Fully booked on this date.");
        } else {
          if (yellowDays.includes(selected)) {
            alert("Hurry! Few slots left on this date.");
          }
          eventDateInput.value = selected;
        }
      }
    });

    calendar.render();
  });
</script>
